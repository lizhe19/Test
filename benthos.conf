input:
  # 模拟 HTTP 接口返回的 JSON 数据
  generate:
    mapping: |
      root = [
        {"id": 1, "name": "Alice", "age": 30},
        {"id": 2, "name": "Bob", "age": 25},
        {"id": 3, "name": "Charlie", "age": 35}
      ]
    interval: "" # 仅生成一次数据

pipeline:
  processors:
    - javascript:
        code: |
          // 使用 JavaScript 处理消息
          const jsonData = JSON.parse(msg.content()); // 解析消息内容为 JSON 对象
          const rows = []; // 创建一个空数组用于存储行式结构

          // 遍历 JSON 数组中的每个对象
          for (const item of jsonData) {
            rows.push(JSON.stringify(item)); // 将每个对象转换为 JSON 字符串并添加到数组中
          }

          // 将行式结构设置为新的消息内容
          msg.setContent(rows.join("\n")); // 使用换行符分隔每个 JSON 对象
          return [msg]; // 返回处理后的消息

output:
  stdout: {} # 将结果输出到标准输出
